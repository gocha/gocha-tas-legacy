; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	LoadXebraRR.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0P@GDJAGEOF@XRSetInterface?$AA@		; `string'
_BSS	SEGMENT
_glhWnd	DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0P@GDJAGEOF@XRSetInterface?$AA@
CONST	SEGMENT
??_C@_0P@GDJAGEOF@XRSetInterface?$AA@ DB 'XRSetInterface', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
_glFuncCount DD	01H
_glFuncNames DD	FLAT:??_C@_0P@GDJAGEOF@XRSetInterface?$AA@
_DATA	ENDS
PUBLIC	??_C@_0CG@FAGGAGHF@Unable?5to?5load?5?$CC?$CFs?$CC?5from?5XEBRA?9R@ ; `string'
PUBLIC	??_C@_0CD@LJBMGOIB@XEBRA?9RR?4DLL?5version?5not?5support@ ; `string'
PUBLIC	??_C@_0BM@GEBFFJFP@Unable?5to?5load?5XEBRA?9RR?4DLL?$AA@ ; `string'
PUBLIC	??_C@_0P@MLPLJANE@XEBRA?9RR?5Error?$AA@		; `string'
PUBLIC	??_C@_0N@CJFKHANJ@XEBRA?9RR?4DLL?$AA@		; `string'
PUBLIC	?LoadXebraRR@@YAHXZ				; LoadXebraRR
EXTRN	__imp__wsprintfA:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	__imp__LoadLibraryA@4:PROC
_BSS	SEGMENT
_glInterface DD	01H DUP (?)
_glFuncPtrs DD	01H DUP (?)
_glhLibRR DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0CG@FAGGAGHF@Unable?5to?5load?5?$CC?$CFs?$CC?5from?5XEBRA?9R@
; File loadxebrarr.cpp
CONST	SEGMENT
??_C@_0CG@FAGGAGHF@Unable?5to?5load?5?$CC?$CFs?$CC?5from?5XEBRA?9R@ DB 'U'
	DB	'nable to load "%s" from XEBRA-RR.DLL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@LJBMGOIB@XEBRA?9RR?4DLL?5version?5not?5support@
CONST	SEGMENT
??_C@_0CD@LJBMGOIB@XEBRA?9RR?4DLL?5version?5not?5support@ DB 'XEBRA-RR.DL'
	DB	'L version not supported', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GEBFFJFP@Unable?5to?5load?5XEBRA?9RR?4DLL?$AA@
CONST	SEGMENT
??_C@_0BM@GEBFFJFP@Unable?5to?5load?5XEBRA?9RR?4DLL?$AA@ DB 'Unable to lo'
	DB	'ad XEBRA-RR.DLL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MLPLJANE@XEBRA?9RR?5Error?$AA@
CONST	SEGMENT
??_C@_0P@MLPLJANE@XEBRA?9RR?5Error?$AA@ DB 'XEBRA-RR Error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CJFKHANJ@XEBRA?9RR?4DLL?$AA@
CONST	SEGMENT
??_C@_0N@CJFKHANJ@XEBRA?9RR?4DLL?$AA@ DB 'XEBRA-RR.DLL', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?LoadXebraRR@@YAHXZ
_TEXT	SEGMENT
_message$ = -128					; size = 128
?LoadXebraRR@@YAHXZ PROC				; LoadXebraRR, COMDAT
; Line 13
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  00009	57		 push	 edi
; Line 18
  0000a	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CJFKHANJ@XEBRA?9RR?4DLL?$AA@
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryA@4
  00015	8b f8		 mov	 edi, eax
; Line 19
  00017	85 ff		 test	 edi, edi
  00019	75 1f		 jne	 SHORT $LN6@LoadXebraR
; Line 21
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR _glhWnd
  00020	6a 10		 push	 16			; 00000010H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MLPLJANE@XEBRA?9RR?5Error?$AA@
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@GEBFFJFP@Unable?5to?5load?5XEBRA?9RR?4DLL?$AA@
  0002c	50		 push	 eax
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16
; Line 22
  00033	33 c0		 xor	 eax, eax
  00035	5f		 pop	 edi
; Line 50
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
$LN6@LoadXebraR:
  0003a	53		 push	 ebx
  0003b	56		 push	 esi
; Line 27
  0003c	33 f6		 xor	 esi, esi
  0003e	89 3d 00 00 00
	00		 mov	 DWORD PTR _glhLibRR, edi
  00044	39 35 00 00 00
	00		 cmp	 DWORD PTR _glFuncCount, esi
  0004a	7e 25		 jle	 SHORT $LN3@LoadXebraR
  0004c	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__GetProcAddress@8
$LL5@LoadXebraR:
; Line 30
  00052	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR _glFuncNames[esi*4]
  00059	51		 push	 ecx
  0005a	57		 push	 edi
  0005b	ff d3		 call	 ebx
; Line 31
  0005d	85 c0		 test	 eax, eax
  0005f	74 43		 je	 SHORT $LN10@LoadXebraR
; Line 39
  00061	89 04 b5 00 00
	00 00		 mov	 DWORD PTR _glFuncPtrs[esi*4], eax
  00068	46		 inc	 esi
  00069	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR _glFuncCount
  0006f	7c e1		 jl	 SHORT $LL5@LoadXebraR
$LN3@LoadXebraR:
; Line 43
  00071	68 00 00 00 00	 push	 OFFSET _glInterface
  00076	ff 15 00 00 00
	00		 call	 DWORD PTR _glFuncPtrs
  0007c	83 c4 04	 add	 esp, 4
  0007f	85 c0		 test	 eax, eax
  00081	75 5c		 jne	 SHORT $LN1@LoadXebraR
; Line 45
  00083	a1 00 00 00 00	 mov	 eax, DWORD PTR _glhWnd
  00088	6a 10		 push	 16			; 00000010H
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MLPLJANE@XEBRA?9RR?5Error?$AA@
  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@LJBMGOIB@XEBRA?9RR?4DLL?5version?5not?5support@
  00094	50		 push	 eax
  00095	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16
  0009b	5e		 pop	 esi
  0009c	5b		 pop	 ebx
; Line 46
  0009d	33 c0		 xor	 eax, eax
  0009f	5f		 pop	 edi
; Line 50
  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c3		 ret	 0
$LN10@LoadXebraR:
; Line 33
  000a4	8b 14 b5 00 00
	00 00		 mov	 edx, DWORD PTR _glFuncNames[esi*4]
  000ab	52		 push	 edx
  000ac	8d 45 80	 lea	 eax, DWORD PTR _message$[ebp]
  000af	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@FAGGAGHF@Unable?5to?5load?5?$CC?$CFs?$CC?5from?5XEBRA?9R@
  000b4	50		 push	 eax
  000b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
; Line 34
  000bb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _glhWnd
  000c1	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c4	6a 10		 push	 16			; 00000010H
  000c6	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MLPLJANE@XEBRA?9RR?5Error?$AA@
  000cb	8d 4d 80	 lea	 ecx, DWORD PTR _message$[ebp]
  000ce	51		 push	 ecx
  000cf	52		 push	 edx
  000d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16
  000d6	5e		 pop	 esi
  000d7	5b		 pop	 ebx
; Line 35
  000d8	33 c0		 xor	 eax, eax
  000da	5f		 pop	 edi
; Line 50
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c3		 ret	 0
$LN1@LoadXebraR:
  000df	5e		 pop	 esi
  000e0	5b		 pop	 ebx
; Line 49
  000e1	b8 01 00 00 00	 mov	 eax, 1
  000e6	5f		 pop	 edi
; Line 50
  000e7	8b e5		 mov	 esp, ebp
  000e9	5d		 pop	 ebp
  000ea	c3		 ret	 0
?LoadXebraRR@@YAHXZ ENDP				; LoadXebraRR
_TEXT	ENDS
END
