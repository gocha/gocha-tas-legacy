;---------------------------------------------------------------
; wgeneral.hsp: Memory Watch
;---------------------------------------------------------------

#ifndef WATCH_GENERAL_INCLUDED
#define global WATCH_GENERAL_INCLUDED

#include "wport.hsp"
#include "wutil.hsp"

#ifdef _DEBUG
delete "hsptmp"
delete "obj"
#endif

;---------------------------------------------------------------

WATCH_SYS_MAX       = 0x2000
WATCH_PROC_SYS_MAX  = 8
WTARGET_MAX         = 16

WATCH_MEMTYPE_NONE  = 0
// other types should be defined

WATCH_DESC_MAX          = 255
WATCH_DESC_MAX_DISP     = 15
WATCH_FORMULA_MAX       = 1023
WATCH_FORMULA_MAX_DISP  = 8

WATCH_FORMULA_TOKEN_MAX = 64
WATCH_FORMULA_TOKEN_LEN_MAX = 63

goto *WATCH_GENERAL_EOF

;---------------------------------------------------------------
; >> exe info
;---------------------------------------------------------------
#packopt runtime    "hsp3c.hrt"
#packopt hide       1
#packopt orgpath    1

#pack  "start.ax"   ; do not encrypt code :)

#define APP_NAMEVER APP_NAME + " " + APP_VER

;---------------------------------------------------------------
; >> symbols
;---------------------------------------------------------------
#const  WATCH_FORMAT_UINT   'u'
#const  WATCH_FORMAT_SINT   's'
#const  WATCH_FORMAT_HEX    'x'
#const  WATCH_FORMAT_BOOL   'b'

#const  WATCH_CMD_READ      'r'
#const  WATCH_CMD_SEPARATOR '-'

;---------------------------------------------------------------

#const  WID_MAIN    0
#const  WID_BACK    2

;---------------------------------------------------------------

#define __EXIT  goto *app_exit
#define __ABORT goto *app_exit

;---------------------------------------------------------------

#module Watch_Util2

#defcfunc safeankif str _p1
	if (watch_katakana@ == false) {
		return safeank(_p1)
	}
return _p1

#global

;---------------------------------------------------------------
*WATCH_GENERAL_EOF

sdim svar, TEMP_MAX

sdim _dir_exe, PATH_MAX
sdim dir_src, PATH_MAX
sdim dir_chk, PATH_MAX
sdim dir_dpm, PATH_MAX
GetModuleFileName NULL, varptr(_dir_exe), PATH_MAX
PathRemoveFileSpec varptr(_dir_exe)
PathRemoveBackSlash varptr(_dir_exe)
#ifdef _DEBUG
	dir_src = dir_cur + "\\..\\"    ; change this if you need
#else
	dir_src = _dir_exe
#endif
PathAddBackSlash varptr(dir_src)
#ifdef _DEBUG
	dir_dpm = dir_cur + "\\"
#else
	dir_dpm = ""
#endif

dim watch_mems_def, 16, 4
watch_format_list = WATCH_FORMAT_UINT, WATCH_FORMAT_SINT, WATCH_FORMAT_HEX, WATCH_FORMAT_BOOL, 0

#endif // !WATCH_GENERAL_INCLUDED
